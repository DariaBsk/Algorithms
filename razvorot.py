#Урок 3. Структуры данных. Связный список.
# Необходимо реализовать метод разворота связного списка (двухсвязного или односвязного на выбор).
# Алгоритм для разворота связного списка:

# Инициализировать три указателя: текущий (current), предыдущий (previous) и следующий (next).
# Установить текущий указатель на голову списка.
# Пока текущий указатель не станет равным null, выполнять следующие действия:
# Установить следующий указатель на следующий элемент после текущего.
# Установить указатель на предыдущий элемент для текущего элемента.
# Установить предыдущий указатель на текущий элемент.
# Установить текущий указатель на следующий элемент.
# Установить голову списка на предыдущий элемент.

# data - данные, которые хранятся в узле списка
# next - ссылка на следующий узел списка
class Node:
    def __init__(self, data):
        self.data = data
        self.next = None

# head - ссылка на первый узел списка
class LinkedList:
    def __init__(self):
        self.head = None
    def reverse(self):
        current = self.head
        previous = None
        while current:
            next_node = current.next
            current.next = previous
            previous = current
            current = next_node
        self.head = previous
# Создаем связный список
linked_list = LinkedList()

node1 = Node(1)
node2 = Node(2)
node3 = Node(3)
node4 = Node(4)
linked_list.head = node1
